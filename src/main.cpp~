/* 
 * File:   newmain.cpp
 * Author: erupter
 *
 * Created on December 3, 2012, 4:53 PM
 */

#include <cstdlib>
#include <ros/ros.h>
#include "serverWIFI.h"
#include "Saetta_Base.h"

using namespace std;
using namespace SaettaServerWifi;

typedef std::map<std::string, std::string> M_string;

/*------------------------------------------------------------------------------
 * main()
 * Main function to set up ROS node.
 *----------------------------------------------------------------------------*/
int main(int argc, char** argv) {
    WifiTx mywifi;
    char myaddr[]= "192.168.1.11";
    mywifi.init_wifi(myaddr);
    mywifi.send_wifi_vel(1.0,0.0);
    sleep (2);
    mywifi.send_wifi_vel(0,0);
    

// Set up ROS.
  ros::init(argc, argv, "Saetta_Base");
  ros::NodeHandle n;

  // Declare variables that can be modified by launch file or command line.
  int rate;

  // Initialize node parameters from launch file or command line.
  // Use a private node handle so that multiple instances of the node can be run simultaneously
  // while using different parameters.
  ros::NodeHandle Saetta_Base_handle_("~");
  Saetta_Base_handle_.param("rate", rate, int(40));

  // Create a new NodeExample object.
  Saetta_Base *base_node = new Saetta_Base();

  // Create a subscriber.
  // Name the topic, message queue, callback function with class name, and object containing callback function.
  ros::Subscriber sub_message = n.subscribe("example", 1000, &base_node::messageCallback, Saetta_Base);

  // Tell ROS how fast to run this node.
  ros::Rate r(rate);

while (n.ok())
  {
    ros::spinOnce();
    r.sleep();
  }

  return 0;
}


